version: "3"

services:

  users_service:
    build:
      context: ../../users-service
      dockerfile: Dockerfile
    environment:
      LOCAL: ${LOCAL}
      NAME: ${NAME}
      ADDRESS: ${ADDRESS}
      GRPC_PORT: ${GRPC_PORT}
      START_TIMEOUT: ${START_TIMEOUT}
      SHUTDOWN_TIMEOUT: ${SHUTDOWN_TIMEOUT}
      CONSUL_URL: ${CONSUL_URL}
      POSTGRES_URL: postgres://${USERS_DB_USERNAME}:${USERS_DB_PASSWORD}@users_postgres:5432/${USERS_DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRATION: ${JWT_ACCESS_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}
    networks:
      - qw_users-net
      - qw_gateway-net
    depends_on:
      - users_postgres

  users_postgres:
    container_name: users_postgres
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: ${USERS_DB_USERNAME}
      POSTGRES_PASSWORD: ${USERS_DB_PASSWORD}
      POSTGRES_DB: ${USERS_DB_NAME}
    restart: on-failure
    ports:
      - ${USERS_DB_PORT}:5432
    volumes:
      - qw_users_postgres_data:/var/lib/postgresql/data
    networks:
      - qw_users-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname ${USERS_DB_NAME} --username ${USERS_DB_USERNAME}" ]
      interval: 2s
      timeout: 15s

  users_migrator:
    build:
      context: ../../users-service
      dockerfile: tern.dockerfile
    command:
      - migrate
      - --conn-string
      - postgres://${USERS_DB_USERNAME}:${USERS_DB_PASSWORD}@users_postgres:5432/${USERS_DB_NAME}
      - --migrations
      - /migrations
    networks:
      - qw_users-net
    depends_on:
      users_postgres:
        condition: service_healthy

networks:
  qw_gateway-net:
  qw_users-net:

volumes:
  qw_users_postgres_data: