version: "3"

services:

  users-service:
    build:
      context: ../../../users-service
      dockerfile: Dockerfile
    volumes:
      - ./configs/users.yaml:/app/config/config.yaml
    ports:
      - ${GRPC_PORT}:${GRPC_PORT}
    networks:
      - qw_dev_users-net
      - qw_dev_gateway-net
      - qw_dev_monitoring-net
    depends_on:
      users-postgres:
        condition: service_healthy

  users-postgres:
    container_name: users-postgres
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: ${USERS_DB_USERNAME}
      POSTGRES_PASSWORD: ${USERS_DB_PASSWORD}
      POSTGRES_DB: ${USERS_DB_NAME}
    restart: on-failure
    ports:
      - ${USERS_DB_PORT}:5432
    volumes:
      - qw_users_postgres_data:/var/lib/postgresql/data
    networks:
      - qw_dev_users-net
      - qw_dev_monitoring-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname ${USERS_DB_NAME} --username ${USERS_DB_USERNAME}" ]
      interval: 2s
      timeout: 15s

  users-migrator:
    build:
      context: ../../../users-service
      dockerfile: tern.dockerfile
    command:
      - migrate
      - --conn-string
      - postgres://${USERS_DB_USERNAME}:${USERS_DB_PASSWORD}@users-postgres:5432/${USERS_DB_NAME}
      - --migrations
      - /migrations
    networks:
      - qw_dev_users-net
    depends_on:
      users-postgres:
        condition: service_healthy

networks:
  qw_dev_gateway-net:
  qw_dev_users-net:
  qw_dev_monitoring-net:

volumes:
  qw_users_postgres_data: